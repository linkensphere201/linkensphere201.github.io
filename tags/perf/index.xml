<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>perf on Bad Fd</title>
    <link>/tags/perf/</link>
    <description>Recent content in perf on Bad Fd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 21 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/perf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rocksdb性能压测</title>
      <link>/drafts/db_rocksdb%E6%80%A7%E8%83%BD%E5%8E%8B%E6%B5%8B/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/db_rocksdb%E6%80%A7%E8%83%BD%E5%8E%8B%E6%B5%8B/</guid>
      <description>&lt;p&gt;压测rocksdb引擎，有两种思路：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自己写一个benchmark工具：
根据自己关心的kv pattern和access pattern，生成对应的kv pairs，然后入库，并发起对应的请求，最后收集结果。
通常不同类型的数据库都有符合不同数据模型的负载模型和不同的建模，如：TP型数据库的TPCxxx，AP型数据库的xxxx，图数据库的LDBC等。
这类思路下有很多相关工具，如：&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>rocksdb性能压测</title>
      <link>/posts/db_rocksdb%E6%80%A7%E8%83%BD%E5%8E%8B%E6%B5%8B/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/db_rocksdb%E6%80%A7%E8%83%BD%E5%8E%8B%E6%B5%8B/</guid>
      <description>&lt;p&gt;压测rocksdb引擎，有两种思路：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自己写一个benchmark工具：
根据自己关心的kv pattern和access pattern，生成对应的kv pairs，然后入库，并发起对应的请求，最后收集结果。
通常不同类型的数据库都有符合不同数据模型的负载模型和不同的建模，如：TP型数据库的TPCxxx，AP型数据库的xxxx，图数据库的LDBC等。
这类思路下有很多相关工具，如：&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>
