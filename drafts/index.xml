<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drafts on Bad Fd</title>
    <link>/drafts/</link>
    <description>Recent content in Drafts on Bad Fd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 19 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="/drafts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>move语义(p3)</title>
      <link>/drafts/cppnotes_move-semantics-n-rvalue-reference-3/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/cppnotes_move-semantics-n-rvalue-reference-3/</guid>
      <description>例子 &amp;ldquo;一路move进去&amp;rdquo; &amp;ldquo;省了copy的开销&amp;rdquo; “rule of 7”</description>
    </item>
    
    <item>
      <title>笔记：进程调试r1 - 工具</title>
      <link>/drafts/debugging_%E7%AC%94%E8%AE%B0%E8%BF%9B%E7%A8%8B%E8%B0%83%E8%AF%95r1-%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/debugging_%E7%AC%94%E8%AE%B0%E8%BF%9B%E7%A8%8B%E8%B0%83%E8%AF%95r1-%E5%B7%A5%E5%85%B7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>笔记：进程调试r2 - 理论&amp;标准</title>
      <link>/drafts/debugging_%E7%AC%94%E8%AE%B0%E8%BF%9B%E7%A8%8B%E8%B0%83%E8%AF%95r2-%E7%90%86%E8%AE%BA%E6%A0%87%E5%87%86/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/debugging_%E7%AC%94%E8%AE%B0%E8%BF%9B%E7%A8%8B%E8%B0%83%E8%AF%95r2-%E7%90%86%E8%AE%BA%E6%A0%87%E5%87%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>类redis-list的持久化编码和复杂度分析</title>
      <link>/drafts/db_%E7%B1%BBredis-list%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96%E7%BC%96%E7%A0%81%E5%92%8C%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/db_%E7%B1%BBredis-list%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96%E7%BC%96%E7%A0%81%E5%92%8C%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/</guid>
      <description></description>
    </item>
    
    <item>
      <title>lsm读写放大分析（r1）</title>
      <link>/drafts/db_lsm%E8%AF%BB%E5%86%99%E6%94%BE%E5%A4%A7%E5%88%86%E6%9E%90r1/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/db_lsm%E8%AF%BB%E5%86%99%E6%94%BE%E5%A4%A7%E5%88%86%E6%9E%90r1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>lsm读写放大分析（r2）</title>
      <link>/drafts/db_lsm%E8%AF%BB%E5%86%99%E6%94%BE%E5%A4%A7%E5%88%86%E6%9E%90r2/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/db_lsm%E8%AF%BB%E5%86%99%E6%94%BE%E5%A4%A7%E5%88%86%E6%9E%90r2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>翻车笔记</title>
      <link>/drafts/algmnotes_%E7%BF%BB%E8%BD%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/drafts/algmnotes_%E7%BF%BB%E8%BD%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;很煞笔的一天，最近两次面试的试水都挂了（但之前面的两个小公司都拿到offer，小公司没有现场编程题），根因都是现场编程题不太理想。这个也不能怪别人，自己长期以来排斥刷题，觉得刷题纯度太低了，加上到目前为止就没有一次现场编程挂过。&lt;/p&gt;
&lt;p&gt;这波有种熟悉的感觉回来了：大二参加acm预选被血虐留下的心理阴影，在那之后再也没碰过OJ。&lt;/p&gt;
&lt;p&gt;另外，问到的一个关于LSM读写放大的优化也答得不是特别理想，因为工作上对这块的优化确实没有做，我看了下都是使用了默认的参数，更别说对compact等进行深度定制（引擎这块上不太深入，这也与工作中至今为止主要负责的模块不是这块有关）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>systemtap笔记</title>
      <link>/drafts/debugging_systemtap_cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/drafts/debugging_systemtap_cheatsheet/</guid>
      <description></description>
    </item>
    
    <item>
      <title>笔记：systemtap相关</title>
      <link>/drafts/debugging_use-systemtap-to-debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/drafts/debugging_use-systemtap-to-debug/</guid>
      <description>&lt;p&gt;本文会提及systemtap的以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何列出某个可执行文件的所有probe位点&lt;/li&gt;
&lt;li&gt;如何取变量的值&lt;/li&gt;
&lt;li&gt;如何通过某个地址的解引用取得对应值&lt;/li&gt;
&lt;li&gt;如何在.return中拿到变量的最新值&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
